name: Apply The Terraform Modules

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ apply-infra ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_KEY  }}'

      - name: Clone another repo (specific branch)
        run: |
          git clone --branch ${{ github.event.client_payload.environment }} \
            https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/DolVladzio/schedule-terraform-config.git \
            ../schedule-terraform-config

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Set dev STATE_BUCKET_NAME to payload value
        if: github.event.client_payload.environment == 'dev'
        run: |
          echo "STATE_BUCKET_NAME=${{ secrets.DEV_STATE_BUCKET_NAME }}" >> $GITHUB_ENV

      - name: Set prod STATE_BUCKET_NAME to payload value
        if: github.event.client_payload.environment == 'prod'
        run: |
          echo "STATE_BUCKET_NAME=${{ secrets.PROD_STATE_BUCKET_NAME }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ env.STATE_BUCKET_NAME }}"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: |
          terraform plan \
            -var "environment=${{ github.event.client_payload.environment }}"

      - name: Terraform Apply
        run: |
          terraform apply \
            -var "environment=${{ github.event.client_payload.environment }}" \
             --auto-approve